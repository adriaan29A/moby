import { useState } from "react"
import { NewToDoForm } from "./NewTodoForm.jsx" //
import "./styles.css"

export default function App() {

//	const [newItem, setNewItem] = useState("")
	const [todos, setTodos] = useState([])

	function handleSubmit(e) {
		e.preventDefault()

		setTodos((currentTodos) => {
			return [
				...currentTodos, // adds new todos
				{id: crypto.randomUUID(), title: newItem, completed: false },
			]
		})
		setNewItem("foo")
	}

    // hah - overwrites the todo with the ...todo below.
	function toggleTodo(id, completed) {
		setTodos(currentTodos => {
			return currentTodos.map(todo => {
				if (todo.id === id) {
					return { ...todo, completed } //overwrites existing todo
				}
				return todo
			})
		})
	}

	function deleteTodo(id) {
		setTodos(currentTodos => {
			return currentTodos.filter(todo => todo.id !== id)
		})
	}

	return (
		<>
		<NewToDoForm />
		<form onSubmit={handleSubmit} className="new-item-form">
			<div className="form-row">
				<label htmlFor="item"> New Item </label>
				<input
					value={newItem}
					onChange={e => setNewItem(e.target.value)}
					type="text"
					id="item"
					/>
			</div>
			<button className="btn">Add</button>
		</form>
			<h1 className="header"> Todo List </h1>
			<ul className="list">
				{ todos.length === 0 && "No Todos" }
				{ todos.map(todo => {
					return (
						<li id = {todo.id}>
							<label>
								<input
									type="checkbox"
									id = {todo.id}
									checked = {todo.completed}
									onChange={e => toggleTodo(id, e.target.checked)}
								/>

								{todo.title}

							</label>
							<button onClick = {() => deleteTodo(todo.id)}
									className="btn btn-danger"> Delete </button>
						</li>
					)
				})}
			</ul>
		</>
	)
}
